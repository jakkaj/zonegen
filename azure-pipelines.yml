# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

pool:
  vmImage: 'Ubuntu 16.04'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  imageName: 'xtellurian/zonegen:$(build.buildId)'
  dockerfilePath: 'src/NetworkZoneModel/Dockerfile'
  dockerContext: 'src/NetworkZoneModel'
  dockerhubRegistryEndpoint: 'riandockerhub'  # set in Azure DevOps

steps:
- task: NuGetToolInstaller@0

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: Docker@1
  displayName: 'Build docker image'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: '$(dockerhubRegistryEndpoint)'
    dockerFile: '$(dockerfilePath)'
    useDefaultContext: false
    buildContext: '$(dockerContext)'

- task: Docker@1
  displayName: 'Login to DockerHub'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: '$(dockerhubRegistryEndpoint)'
    command: login

- task: Docker@1
  displayName: 'Push image to registry'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  inputs:
    command: 'push'
    imageName: '$imageName'